<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CLP Manager: Gest√£o Ativa de Pool de Liquidez</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f7f9fb;
        }
        .input-group label {
            font-size: 0.875rem;
            font-weight: 500;
        }
        .input-group input, .input-group select {
            border: 1px solid #d1d5db;
            padding: 0.5rem;
            border-radius: 0.375rem;
            margin-top: 0.25rem;
            transition: all 0.2s;
        }
        .section-title {
            padding-left: 0.75rem;
            border-left: 4px solid #3b82f6;
        }
    </style>
</head>
<body class="p-4 md:p-8 min-h-screen">

    <div class="max-w-4xl mx-auto bg-white shadow-2xl rounded-xl p-6 md:p-10 border border-blue-100">
        <h1 class="text-3xl md:text-4xl font-extrabold text-blue-700 mb-2">CLP Manager ü§ñ</h1>
        <p class="text-gray-600 mb-8">An√°lise de Risco/Retorno e Gest√£o de Range para Pools de Liquidez Concentrada.</p>
        
        <form id="poolForm" class="space-y-8">
            
            <!-- SE√á√ÉO 1: Dados da Posi√ß√£o Atual -->
            <div class="space-y-4 p-5 bg-blue-50 rounded-lg">
                <h2 class="section-title text-xl font-bold text-blue-600">1. Sua Posi√ß√£o & Par</h2>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="input-group">
                        <label for="Preco_Atual">Pre√ßo Atual do Par (Token B / Token A)</label>
                        <input type="number" id="Preco_Atual" value="2000" step="0.01" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="Range_Inferior">Range Inferior (Sua Posi√ß√£o)</label>
                        <input type="number" id="Range_Inferior" value="1950" step="0.01" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="Range_Superior">Range Superior (Sua Posi√ß√£o)</label>
                        <input type="number" id="Range_Superior" value="2050" step="0.01" class="w-full">
                    </div>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                    <div class="input-group">
                        <label for="APY_Atual">APY Atual (Ex: 0.18)</label>
                        <input type="number" id="APY_Atual" value="0.18" step="0.01" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="IL_Estimada">IL Estimada (Ex: 0.06)</label>
                        <input type="number" id="IL_Estimada" value="0.06" step="0.01" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="Vol_Change_7d_PAR">Vol. 7d Par (Ex: -0.15)</label>
                        <input type="number" id="Vol_Change_7d_PAR" value="-0.15" step="0.01" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="Fator_Macro_TVL_Geral">Fator Macro (Ex: 0.8)</label>
                        <input type="number" id="Fator_Macro_TVL_Geral" value="0.8" step="0.01" class="w-full">
                    </div>
                </div>
            </div>

            <!-- SE√á√ÉO 2: Indicadores T√©cnicos (Foco no Token Vol√°til 'A') -->
            <div class="space-y-4 p-5 bg-yellow-50 rounded-lg">
                <h2 class="section-title text-xl font-bold text-yellow-700">2. Indicadores do Token Vol√°til (A)</h2>
                <div class="grid grid-cols-2 md:grid-cols-5 gap-4">
                    <div class="input-group">
                        <label for="RSI_A">RSI (0-100)</label>
                        <input type="number" id="RSI_A" value="78" min="0" max="100" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="StochRSI_A">StochRSI (0-100)</label>
                        <input type="number" id="StochRSI_A" value="98" min="0" max="100" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="BB_Largura_A">BB Largura (Ex: 0.16)</label>
                        <input type="number" id="BB_Largura_A" value="0.16" step="0.001" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="MACD_Sinal_A">MACD Crossover</label>
                        <select id="MACD_Sinal_A" class="w-full">
                            <option value="ALTA_FORTE" selected>ALTA_FORTE</option>
                            <option value="ALTA_FRACA">ALTA_FRACA</option>
                            <option value="BAIXA_FRACA">BAIXA_FRACA</option>
                            <option value="BAIXA_FORTE">BAIXA_FORTE</option>
                            <option value="LATERAL">LATERAL</option>
                        </select>
                    </div>
                    <div class="input-group">
                        <label for="BB_Largura_B">BB Largura Token B (Stable)</label>
                        <input type="number" id="BB_Largura_B" value="0.001" step="0.001" class="w-full">
                    </div>
                </div>
            </div>

            <!-- SE√á√ÉO 3: Capital e Custos -->
            <div class="space-y-4 p-5 bg-green-50 rounded-lg">
                <h2 class="section-title text-xl font-bold text-green-700">3. Capital & Custos</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="input-group">
                        <label for="Liquidez_Total_USD">Liquidez Total Posta (USD)</label>
                        <input type="number" id="Liquidez_Total_USD" value="50000" class="w-full">
                    </div>
                    <div class="input-group">
                        <label for="Capital_Para_Gas_Mensal_USD">Capital para G√°s Mensal (USD)</label>
                        <input type="number" id="Capital_Para_Gas_Mensal_USD" value="50" class="w-full">
                    </div>
                </div>
            </div>

            <button type="button" onclick="runAnalysis()" 
                    class="w-full py-3 px-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-[1.01]">
                EXECUTAR AN√ÅLISE E GEST√ÉO
            </button>
        </form>

        <!-- √Årea de Resultados -->
        <div class="mt-10 pt-5 border-t border-gray-200 space-y-4">
            <h2 class="text-2xl font-bold text-gray-800">Resultado da Decis√£o</h2>
            <div id="decisionOutput" class="p-4 rounded-lg text-lg font-bold text-center bg-gray-100 border-2 border-gray-300">
                Aguardando execu√ß√£o...
            </div>
            
            <h3 class="text-xl font-semibold text-gray-700 mt-6">Alertas e Pontua√ß√£o:</h3>
            <div id="alertOutput" class="space-y-2 text-sm">
                <!-- Alertas ser√£o injetados aqui -->
            </div>
        </div>
    </div>

    <script>
        class PoolManager {
            constructor(limite_score_minimo = 0.04, margem_rebalanceamento = 0.02, custo_medio_gas_rebalanceamento = 50) {
                this.LIMITE_SCORE_MINIMO = limite_score_minimo;
                this.MARGEM_REBALANCEAMENTO = margem_rebalanceamento;
                this.CUSTO_MEDIO_GAS = custo_medio_gas_rebalanceamento; 
                this.alertLog = document.getElementById('alertOutput');
                this.alertLog.innerHTML = '';
            }

            enviarAlerta(mensagem, isCritical = false) {
                const typeClass = isCritical ? 'bg-red-100 text-red-800 border-red-400' : 'bg-blue-100 text-blue-800 border-blue-400';
                const logEntry = `<div class="p-3 rounded-md border ${typeClass}"><span class="font-semibold">${isCritical ? 'CR√çTICO: ' : 'ALERTA: '}</span>${mensagem}</div>`;
                this.alertLog.innerHTML += logEntry;
            }

            ajustarLarguraRangePorCapital(rangeWidthPercentual, liquidezTotalUsd, capitalGasMensal) {
                // Considera 4 rebalanceamentos por m√™s como ideal
                const custoOtimizadoMensal = this.CUSTO_MEDIO_GAS * 4;
                
                if (capitalGasMensal < custoOtimizadoMensal) {
                    const fatorNecessario = custoOtimizadoMensal / Math.max(capitalGasMensal, 1.0); 
                    // Limita o alargamento m√°ximo a 2x o sugerido (para n√£o perder toda a efici√™ncia)
                    const fatorAjuste = Math.min(fatorNecessario, 2.0); 
                    
                    this.enviarAlerta(`Capital de g√°s limitado ($${capitalGasMensal.toFixed(2)} vs $${custoOtimizadoMensal.toFixed(2)} ideal). Alargando range em ${fatorAjuste.toFixed(2)}x o sugerido para reduzir rebalanceamentos.`, true);
                    return fatorAjuste;
                }
                
                return 1.0;
            }

            calcularNovoRange(precoAtual, larguraBbA, liquidezTotalUsd, capitalGasMensal) {
                // 1. Largura Base (2x a volatilidade)
                const rangeWidthPercentual = larguraBbA * 2.0; 

                // 2. Ajuste por Capital
                const fatorAjuste = this.ajustarLarguraRangePorCapital(rangeWidthPercentual, liquidezTotalUsd, capitalGasMensal);
                
                // Aplica o ajuste
                const rangeWidthAjustado = rangeWidthPercentual * fatorAjuste;

                // 3. C√°lculo do Novo Range
                const novoRangeInferior = precoAtual * (1 - (rangeWidthAjustado / 2.0));
                const novoRangeSuperior = precoAtual * (1 + (rangeWidthAjustado / 2.0));
                
                return {
                    inferior: novoRangeInferior.toFixed(4), 
                    superior: novoRangeSuperior.toFixed(4)
                };
            }

            analisarEGrenciarPool(dados) {
                this.alertLog.innerHTML = ''; // Limpa logs anteriores

                // Desempacotamento de dados
                const {
                    APY_Atual, IL_Estimada, Vol_Change_7d_PAR, Fator_Macro_TVL_Geral,
                    Preco_Atual, Range_Inferior, Range_Superior,
                    RSI_A, StochRSI_A, MACD_Sinal_A, BB_Largura_A, BB_Largura_B,
                    Liquidez_Total_USD, Capital_Para_Gas_Mensal_USD
                } = dados;

                // 1. CHECAGEM DE REBALANCEAMENTO (PRIORIDADE M√ÅXIMA)
                const foraDoRange = Preco_Atual < Range_Inferior || Preco_Atual > Range_Superior;
                const proximoDoLimite = (Preco_Atual / Range_Inferior < (1 + this.MARGEM_REBALANCEAMENTO)) ||
                                        (Range_Superior / Preco_Atual < (1 + this.MARGEM_REBALANCEAMENTO));
                
                if (foraDoRange || proximoDoLimite) {
                    const novoRange = this.calcularNovoRange(Preco_Atual, BB_Largura_A, Liquidez_Total_USD, Capital_Para_Gas_Mensal_USD);
                    const mensagem = `A√á√ÉO: REBALANCEAR. Posi√ß√£o Inativa/Pr√≥ximo ao Limite. Novo Range Sugerido: $${novoRange.inferior} - $${novoRange.superior}.`;
                    this.enviarAlerta(mensagem, true); // Alerta cr√≠tico para rebalanceamento
                    return `REBALANCEAR: $${novoRange.inferior} - $${novoRange.superior}`;
                }

                // 2. C√ÅLCULO DO RISCO/RETORNO (Se a posi√ß√£o est√° ATIVA)
                const netReturn = APY_Atual - IL_Estimada;
                let riskFactorGraph = 1.0;
                let riscoExtremo = false;

                // CEN√ÅRIO 1: RISCO EXTREMO (Puni√ß√£o 0.4)
                if ((MACD_Sinal_A === "ALTA_FORTE" && RSI_A > 75) || BB_Largura_A > 0.15 || BB_Largura_B > 0.03) {
                    riskFactorGraph = 0.4;
                    riscoExtremo = true;
                    this.enviarAlerta("RISCO CR√çTICO! Volatilidade/IL Alt√≠ssima ou Paridade (Token B) em Risco.", true);
                
                // CEN√ÅRIO 2: RISCO MODERADO (Puni√ß√£o 0.7)
                } else if (Vol_Change_7d_PAR < -0.10 || RSI_A > 70 || StochRSI_A > 85) {
                    riskFactorGraph = 0.7;
                    this.enviarAlerta("RISCO MODERADO. Volume em queda ou Alerta de Revers√£o de pre√ßo (IL iminente).");
                
                // CEN√ÅRIO 3: FAVOR√ÅVEL (B√¥nus 1.4)
                } else if (Vol_Change_7d_PAR > 0.10 && BB_Largura_A < 0.05 && RSI_A >= 40 && RSI_A <= 60) {
                    riskFactorGraph = 1.4;
                    this.enviarAlerta("FAVOR√ÅVEL. Volume alto e pre√ßo est√°vel (BB e RSI neutros).");
                }
                
                const finalScore = netReturn * riskFactorGraph * Fator_Macro_TVL_Geral;

                // 3. DECIS√ÉO FINAL
                this.enviarAlerta(`Pontua√ß√£o Ajustada (Score Final): ${finalScore.toFixed(4)}`, false);

                if (finalScore > this.LIMITE_SCORE_MINIMO) {
                    this.enviarAlerta("DECIS√ÉO: MANTER POSI√á√ÉO. O lucro ajustado compensa o risco.", false);
                    return "MANTER POSI√á√ÉO";
                } else {
                    this.enviarAlerta("DECIS√ÉO: DESMONTAR POSI√á√ÉO. Risco/IL supera lucro ajustado.", true);
                    return "DESMONTAR POSI√á√ÉO";
                }
            }
        }

        function getFormData() {
            const form = document.getElementById('poolForm');
            const data = {};
            // Fun√ß√£o auxiliar para garantir que n√∫meros sejam floats e n√£o strings vazias
            const getValue = (id) => {
                const element = form.elements[id];
                if (!element) return null;

                if (element.type === 'number') {
                    return parseFloat(element.value) || 0;
                }
                return element.value;
            };

            // Mapeamento dos inputs para o objeto de dados
            const fields = [
                'APY_Atual', 'IL_Estimada', 'Vol_Change_7d_PAR', 'Fator_Macro_TVL_Geral',
                'Preco_Atual', 'Range_Inferior', 'Range_Superior',
                'RSI_A', 'StochRSI_A', 'MACD_Sinal_A', 'BB_Largura_A', 'BB_Largura_B',
                'Liquidez_Total_USD', 'Capital_Para_Gas_Mensal_USD'
            ];

            fields.forEach(field => {
                data[field] = getValue(field);
            });
            return data;
        }

        function runAnalysis() {
            const dados = getFormData();
            // Cria uma nova inst√¢ncia para limpar os logs
            const manager = new PoolManager(); 
            const decisionOutput = document.getElementById('decisionOutput');
            let result = '';

            try {
                result = manager.analisarEGrenciarPool(dados);
            } catch (error) {
                console.error("Erro na an√°lise:", error);
                decisionOutput.className = 'p-4 rounded-lg text-lg font-bold text-center bg-red-600 text-white';
                decisionOutput.textContent = 'ERRO: Verifique os valores de entrada.';
                return;
            }

            // Estiliza o output com base na decis√£o
            let decisionClass = 'p-4 rounded-lg text-lg font-bold text-center ';
            if (result.startsWith('REBALANCEAR')) {
                decisionClass += 'bg-yellow-500 text-white border-yellow-700';
            } else if (result === 'MANTER POSI√á√ÉO') {
                decisionClass += 'bg-green-500 text-white border-green-700';
            } else {
                decisionClass += 'bg-red-500 text-white border-red-700';
            }

            decisionOutput.className = decisionClass;
            decisionOutput.textContent = result;
        }

        // Executar uma an√°lise inicial ao carregar
        document.addEventListener('DOMContentLoaded', () => {
             // Simula um clique no bot√£o para mostrar o resultado inicial
             runAnalysis();
        });
    </script>
</body>
</html>

